{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable2",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable3",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Lookup"
				},
				{
					"name": "manikanta"
				},
				{
					"name": "SurrogateKey"
				},
				{
					"name": "Select1"
				}
			],
			"script": "\n\nsource(output(\n\t\tID as integer,\n\t\tNAME as string,\n\t\tSAL as decimal(19,4)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource(output(\n\t\tPKEY as integer,\n\t\tNAME as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source2\nsource1, source2 lookup(source1@ID == source2@ID,\n\tbroadcast: 'none')~> Lookup\nLookup split(isMatch(),\n\tdisjoint: false) ~> manikanta@(MATCH, NON-MATCH)\nSelect1 keyGenerate(output(newhjgf as long),\n\tstartAt: 1L) ~> SurrogateKey\nmanikanta@NON-MATCH select(mapColumn(\n\t\tID = manikanta@NON-MATCH@ID,\n\t\tNAME = manikanta@NON-MATCH@NAME\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSurrogateKey sink(input(\n\t\tPKEY as integer,\n\t\tNAME as string,\n\t\tID as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tNAME,\n\t\tID,\n\t\tPKEY = newhjgf\n\t)) ~> sink1"
		}
	}
}